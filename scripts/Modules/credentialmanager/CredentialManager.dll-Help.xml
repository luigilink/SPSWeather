<?xml version="1.0" encoding="utf-8"?>
<helpItems schema="maml" xmlns="http://msh">
  <!-- Cmdlet: Get-StoredCredential -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-StoredCredential</command:name>
      <command:verb>Get</command:verb>
      <command:noun>StoredCredential</command:noun>
      <maml:description>
        <maml:para>Gets stored credentials from the Windows Credential Store/Vault</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Gets stored credentials from the Windows Credential Store/Vault and returns as either a PSCredential object or as a Credential Object</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: CredentialObject Output -->
      <command:syntaxItem>
        <maml:name>Get-StoredCredential</maml:name>
        <!-- Parameter: AsCredentialObject -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AsCredentialObject</maml:name>
          <maml:description>
            <maml:para>Switch to return the credentials as Credential objects instead of the default PSObject</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Target -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Target</maml:name>
          <maml:description>
            <maml:para>The command will only return credentials with the specified target</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Type -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Type</maml:name>
          <maml:description>
            <maml:para>Specifies the type of credential to return, possible values are [GENERIC, DOMAIN_PASSWORD, DOMAIN_CERTIFICATE, DOMAIN_VISIBLE_PASSWORD, GENERIC_CERTIFICATE, DOMAIN_EXTENDED, MAXIMUM, MAXIMUM_EX]</maml:para>
          </maml:description>
          <command:parameterValue required="true">CredType</command:parameterValue>
          <dev:type>
            <maml:name>PSCredentialManager.Common.Enum.CredType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Generic</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Target -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Target</maml:name>
        <maml:description>
          <maml:para>The command will only return credentials with the specified target</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Type -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Type</maml:name>
        <maml:description>
          <maml:para>Specifies the type of credential to return, possible values are [GENERIC, DOMAIN_PASSWORD, DOMAIN_CERTIFICATE, DOMAIN_VISIBLE_PASSWORD, GENERIC_CERTIFICATE, DOMAIN_EXTENDED, MAXIMUM, MAXIMUM_EX]</maml:para>
        </maml:description>
        <command:parameterValue required="true">CredType</command:parameterValue>
        <dev:type>
          <maml:name>PSCredentialManager.Common.Enum.CredType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Generic</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: AsCredentialObject -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>AsCredentialObject</maml:name>
        <maml:description>
          <maml:para>Switch to return the credentials as Credential objects instead of the default PSObject</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The command will only return credentials with the specified target</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: Credential -->
      <command:returnValue>
        <dev:type>
          <maml:name>PSCredentialManager.Common.Credential</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
      <!-- OutputType: PSCredential -->
      <command:returnValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>PS C:\&gt; Get-StoredCredential -Target Server01</dev:code>
        <dev:remarks>
          <maml:para>Returns credentials for Server01 as a PSCredential object</maml:para>
          <maml:para>UserName Password</maml:para>
          <maml:para>-------- --------</maml:para>
          <maml:para>test-user System.Security.SecureString</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>PS C:\&gt; Get-StoredCredential -Target Server01 -AsCredentialObject</dev:code>
        <dev:remarks>
          <maml:para>Returns credentials for Server01 as a Credential object</maml:para>
          <maml:para>Flags : 0</maml:para>
          <maml:para>Type : GENERIC</maml:para>
          <maml:para>TargetName : server01</maml:para>
          <maml:para>Comment :</maml:para>
          <maml:para>LastWritten : 23/04/2016 10:01:37</maml:para>
          <maml:para>PaswordSize : 18</maml:para>
          <maml:para>Password : Password1</maml:para>
          <maml:para>Persist : ENTERPRISE</maml:para>
          <maml:para>AttributeCount : 0</maml:para>
          <maml:para>Attributes : 0</maml:para>
          <maml:para>TargetAlias :</maml:para>
          <maml:para>UserName : test-user</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version</maml:linkText>
        <maml:uri>https://github.com/davotronic5000/PowerShell_Credential_Manager/wiki/Get-StoredCredential</maml:uri>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: New-StoredCredential -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>New-StoredCredential</command:name>
      <command:verb>New</command:verb>
      <command:noun>StoredCredential</command:noun>
      <maml:description>
        <maml:para>Create a new credential in the Windows Credential Store/Vault</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Create a new credential in the Windows Credential Store/Vault</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: Plain Text -->
      <command:syntaxItem>
        <maml:name>New-StoredCredential</maml:name>
        <!-- Parameter: Comment -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Comment</maml:name>
          <maml:description>
            <maml:para>Provides a comment to identify the credentials in the store</maml:para>
            <maml:para></maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Updated by: Dave on: 10/06/2016</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Password -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Password</maml:name>
          <maml:description>
            <maml:para>Specifies the password in plain text, cannot be used in conjunction with SecurePassword or Credential parameters.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>q7:7T6zBE%</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Persist -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Persist</maml:name>
          <maml:description>
            <maml:para>sets the persistence settings of the credential, possible values are [SESSION, LOCAL_MACHINE, ENTERPRISE]</maml:para>
          </maml:description>
          <command:parameterValue required="true">CredPersist</command:parameterValue>
          <dev:type>
            <maml:name>PSCredentialManager.Common.Enum.CredPersist</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Session</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Target -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Target</maml:name>
          <maml:description>
            <maml:para>Specifies the target of the credentials being added.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>DESKTOP-6O28IQJ</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Type -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Type</maml:name>
          <maml:description>
            <maml:para>Type of credential to store, possible values are [GENERIC, DOMAIN_PASSWORD, DOMAIN_CERTIFICATE, DOMAIN_VISIBLE_PASSWORD, GENERIC_CERTIFICATE, DOMAIN_EXTENDED, MAXIMUM, MAXIMUM_EX]</maml:para>
          </maml:description>
          <command:parameterValue required="true">CredType</command:parameterValue>
          <dev:type>
            <maml:name>PSCredentialManager.Common.Enum.CredType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Generic</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: UserName -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UserName</maml:name>
          <maml:description>
            <maml:para>specified the username to be used for the credentials, cannot be used in conjunction with Credentials parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Dave</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: Secure String -->
      <command:syntaxItem>
        <maml:name>New-StoredCredential</maml:name>
        <!-- Parameter: Comment -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Comment</maml:name>
          <maml:description>
            <maml:para>Provides a comment to identify the credentials in the store</maml:para>
            <maml:para></maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Updated by: Dave on: 10/06/2016</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Persist -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Persist</maml:name>
          <maml:description>
            <maml:para>sets the persistence settings of the credential, possible values are [SESSION, LOCAL_MACHINE, ENTERPRISE]</maml:para>
          </maml:description>
          <command:parameterValue required="true">CredPersist</command:parameterValue>
          <dev:type>
            <maml:name>PSCredentialManager.Common.Enum.CredPersist</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Session</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: SecurePassword -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SecurePassword</maml:name>
          <maml:description>
            <maml:para>Specifies the password as a secure string, cannot be used in conjunction with SecurePassword or Credential parameters.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SecureString</command:parameterValue>
          <dev:type>
            <maml:name>System.Security.SecureString</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Target -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Target</maml:name>
          <maml:description>
            <maml:para>Specifies the target of the credentials being added.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>DESKTOP-6O28IQJ</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Type -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Type</maml:name>
          <maml:description>
            <maml:para>Type of credential to store, possible values are [GENERIC, DOMAIN_PASSWORD, DOMAIN_CERTIFICATE, DOMAIN_VISIBLE_PASSWORD, GENERIC_CERTIFICATE, DOMAIN_EXTENDED, MAXIMUM, MAXIMUM_EX]</maml:para>
          </maml:description>
          <command:parameterValue required="true">CredType</command:parameterValue>
          <dev:type>
            <maml:name>PSCredentialManager.Common.Enum.CredType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Generic</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: UserName -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UserName</maml:name>
          <maml:description>
            <maml:para>specified the username to be used for the credentials, cannot be used in conjunction with Credentials parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Dave</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: PSCredentialObject -->
      <command:syntaxItem>
        <maml:name>New-StoredCredential</maml:name>
        <!-- Parameter: Comment -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Comment</maml:name>
          <maml:description>
            <maml:para>Provides a comment to identify the credentials in the store</maml:para>
            <maml:para></maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Updated by: Dave on: 10/06/2016</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Credentials -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Credentials</maml:name>
          <maml:description>
            <maml:para></maml:para>
          </maml:description>
          <command:parameterValue required="true">PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Persist -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Persist</maml:name>
          <maml:description>
            <maml:para>sets the persistence settings of the credential, possible values are [SESSION, LOCAL_MACHINE, ENTERPRISE]</maml:para>
          </maml:description>
          <command:parameterValue required="true">CredPersist</command:parameterValue>
          <dev:type>
            <maml:name>PSCredentialManager.Common.Enum.CredPersist</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Session</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Target -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Target</maml:name>
          <maml:description>
            <maml:para>Specifies the target of the credentials being added.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>DESKTOP-6O28IQJ</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Type -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Type</maml:name>
          <maml:description>
            <maml:para>Type of credential to store, possible values are [GENERIC, DOMAIN_PASSWORD, DOMAIN_CERTIFICATE, DOMAIN_VISIBLE_PASSWORD, GENERIC_CERTIFICATE, DOMAIN_EXTENDED, MAXIMUM, MAXIMUM_EX]</maml:para>
          </maml:description>
          <command:parameterValue required="true">CredType</command:parameterValue>
          <dev:type>
            <maml:name>PSCredentialManager.Common.Enum.CredType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Generic</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Target -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Target</maml:name>
        <maml:description>
          <maml:para>Specifies the target of the credentials being added.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>DESKTOP-6O28IQJ</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: UserName -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UserName</maml:name>
        <maml:description>
          <maml:para>specified the username to be used for the credentials, cannot be used in conjunction with Credentials parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Dave</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Password -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Password</maml:name>
        <maml:description>
          <maml:para>Specifies the password in plain text, cannot be used in conjunction with SecurePassword or Credential parameters.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>2hxmOG=wM:</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: SecurePassword -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SecurePassword</maml:name>
        <maml:description>
          <maml:para>Specifies the password as a secure string, cannot be used in conjunction with SecurePassword or Credential parameters.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SecureString</command:parameterValue>
        <dev:type>
          <maml:name>System.Security.SecureString</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Comment -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Comment</maml:name>
        <maml:description>
          <maml:para>Provides a comment to identify the credentials in the store</maml:para>
          <maml:para></maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Updated by: Dave on: 10/06/2016</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Type -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Type</maml:name>
        <maml:description>
          <maml:para>Type of credential to store, possible values are [GENERIC, DOMAIN_PASSWORD, DOMAIN_CERTIFICATE, DOMAIN_VISIBLE_PASSWORD, GENERIC_CERTIFICATE, DOMAIN_EXTENDED, MAXIMUM, MAXIMUM_EX]</maml:para>
        </maml:description>
        <command:parameterValue required="true">CredType</command:parameterValue>
        <dev:type>
          <maml:name>PSCredentialManager.Common.Enum.CredType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Generic</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Persist -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Persist</maml:name>
        <maml:description>
          <maml:para>sets the persistence settings of the credential, possible values are [SESSION, LOCAL_MACHINE, ENTERPRISE]</maml:para>
        </maml:description>
        <command:parameterValue required="true">CredPersist</command:parameterValue>
        <dev:type>
          <maml:name>PSCredentialManager.Common.Enum.CredPersist</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Session</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Credentials -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Credentials</maml:name>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
        <command:parameterValue required="true">PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: Credential -->
      <command:returnValue>
        <dev:type>
          <maml:name>PSCredentialManager.Common.Credential</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>PS C:\&gt; New-StoredCredential -Target server01 -UserName test-user -Password Password1</dev:code>
        <dev:remarks>
          <maml:para>creates a credential for server01 with the username test-user and password Password1</maml:para>
          <maml:para>Flags : 0</maml:para>
          <maml:para>Type : GENERIC</maml:para>
          <maml:para>TargetName : server01</maml:para>
          <maml:para>Comment : Updated by: Dave on: 23/04/2016</maml:para>
          <maml:para>LastWritten : 23/04/2016 10:48:56</maml:para>
          <maml:para>PaswordSize : 18</maml:para>
          <maml:para>Password : Password1</maml:para>
          <maml:para>Persist : SESSION</maml:para>
          <maml:para>AttributeCount : 0</maml:para>
          <maml:para>Attributes : 0</maml:para>
          <maml:para>TargetAlias :</maml:para>
          <maml:para>UserName : test-user</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>PS C:\&gt; Get-Credential -UserName test-user -Message "Password please" | New-StoredCredential -Target Server01</dev:code>
        <dev:remarks>
          <maml:para>Creates a credential for Server01 with the username and password provided in the PSCredential object from Get-Credential</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version</maml:linkText>
        <maml:uri>https://github.com/davotronic5000/PowerShell_Credential_Manager/wiki/New-StoredCredential</maml:uri>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Remove-StoredCredential -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Remove-StoredCredential</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>StoredCredential</command:noun>
      <maml:description>
        <maml:para>Deletes a credentials from the Windows Credential Store/Vault</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Deletes a credentials from the Windows Credential Store/Vault</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Remove-StoredCredential</maml:name>
        <!-- Parameter: Target -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Target</maml:name>
          <maml:description>
            <maml:para>specifies a target to identitfy the credential to be deleted</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Type -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Type</maml:name>
          <maml:description>
            <maml:para>Specifies the type of credential to be deleted, possible values are [GENERIC, DOMAIN_PASSWORD, DOMAIN_CERTIFICATE, DOMAIN_VISIBLE_PASSWORD, GENERIC_CERTIFICATE, DOMAIN_EXTENDED, MAXIMUM, MAXIMUM_EX]</maml:para>
          </maml:description>
          <command:parameterValue required="true">CredType</command:parameterValue>
          <dev:type>
            <maml:name>PSCredentialManager.Common.Enum.CredType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Generic</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Target -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Target</maml:name>
        <maml:description>
          <maml:para>specifies a target to identitfy the credential to be deleted</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Type -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Type</maml:name>
        <maml:description>
          <maml:para>Specifies the type of credential to be deleted, possible values are [GENERIC, DOMAIN_PASSWORD, DOMAIN_CERTIFICATE, DOMAIN_VISIBLE_PASSWORD, GENERIC_CERTIFICATE, DOMAIN_EXTENDED, MAXIMUM, MAXIMUM_EX]</maml:para>
        </maml:description>
        <command:parameterValue required="true">CredType</command:parameterValue>
        <dev:type>
          <maml:name>PSCredentialManager.Common.Enum.CredType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Generic</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>specifies a target to identitfy the credential to be deleted</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>PS C:\&gt; Remove-StoredCredential -Target Server01 -Type GENERIC</dev:code>
        <dev:remarks>
          <maml:para>Deletes a generic credential with the target Server01</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version</maml:linkText>
        <maml:uri>https://github.com/davotronic5000/PowerShell_Credential_Manager/wiki/Remove-StoredCredential</maml:uri>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Cmdlet: Get-StrongPassword -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-StrongPassword</command:name>
      <command:verb>Get</command:verb>
      <command:noun>StrongPassword</command:noun>
      <maml:description>
        <maml:para>Generates a strong password</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Generates a strong password based on the parameters provided</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Get-StrongPassword</maml:name>
        <!-- Parameter: Length -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Length</maml:name>
          <maml:description>
            <maml:para>Length in Characters for the generated password to be.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>10</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: NumberOfSpecialCharacters -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NumberOfSpecialCharacters</maml:name>
          <maml:description>
            <maml:para>Number of special characters to include in the password, must be less than the length of the password</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>3</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: Length -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Length</maml:name>
        <maml:description>
          <maml:para>Length in Characters for the generated password to be.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>10</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: NumberOfSpecialCharacters -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>NumberOfSpecialCharacters</maml:name>
        <maml:description>
          <maml:para>Number of special characters to include in the password, must be less than the length of the password</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>3</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <!-- OutputType: String -->
      <command:returnValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>PS C:\&gt; Get-StrongPassword</dev:code>
        <dev:remarks>
          <maml:para>Generates a password 10 characters long with 3 special characters</maml:para>
          <maml:para>QTJ(T?wwe)</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>PS C:\&gt; Get-StrongPassword  -Length 20 -NumberOfSpecialCharacters 5</dev:code>
        <dev:remarks>
          <maml:para>Generates a password 20 characters long with 5 special characters</maml:para>
          <maml:para>zPN&gt;C%.f/(l1aGq)n3Ze</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version</maml:linkText>
        <maml:uri>https://github.com/davotronic5000/PowerShell_Credential_Manager/wiki/Get-StrongPassword</maml:uri>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
</helpItems>